1 哪些寄存器存放函数的参数，如printf的参数‘13’在那个寄存器？
a0-a7用于存放函数的参数，其中a0-1可以存放返回值。若参数多余8个，将存放在栈帧内
printf("%d %d\n", f(8)+1, 13);13是第3个参数，存在a2中

2 main在哪里调用了函数f，f在哪里调用了g？
main在函数开头进行了调用的Prologue Epllogue操作，但没有实际的call指令，直接用立即数12代替了函数计算
f中也一样，没有实际调用g函数
g被内联(inline)到了f中，f又被内联到了main中

3 函数prinf的地址？
0x30 + (0x0 << 12) + 1536(0x600) = 0x630

4 在main刚刚jalr到printf时，ra的值？
0x38，jalr指令会把ra设置为当前pc+4，即下一条指令的位置，为函数返回做准备

5 运行以下代码：unsigned int i = 0x00646c72;  printf("H%x Wo%s", 57616, &i);
输出是什么？这个输出与RISC-V的小端模式(little-endian)有关，
如果RISC-V采用大端模式，为了产生相同结果，后两个参数要怎么改变？
答：He110 World，57616不变，i变为0x726c6400
%x表示输出十六进制的整数，与大端小端无关，57616 = 0xe110
%s表示从i的地址开始，以字符格式读取，直到读到’\0’为止
小端模式时，内存中的i：72 6c 64 00，对应 r l d \0
改为大端模式就要反过来，0x726c6400

6 在以下代码中，’y=’之后会打印什么？为什么？
printf("x=%d y=%d", 3);
打印a2寄存器的值，因为第三个参数应该存放在a2中